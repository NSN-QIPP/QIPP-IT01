<apex:page id="pg" standardController="QIPP_Project__c" extensions="qippStandardProjectBenefitCtrl,QIPPBenefit,businessActivityMapping,BenefitingBusinessGroupController" tabStyle="QIPP_Project__c" docType="html-5.0" >
    <apex:includeScript value="https://code.jquery.com/jquery-2.1.1.min.js"/>

<style>
                 ul{color:red!important;}
                .messageText{color:red;}
               .custPopup{
                background-color: white;
                border-width: 2px;
                border-style: solid;
                z-index: 9999;
                left: 50%;
                padding:10px;
                position: fixed;
                /* These are the 3 css properties you will need to change so the popup 
                displays in the center of the screen. First set the width. Then set 
                margin-left to negative half of what the width is. You can add 
                the height property for a fixed size pop up if you want.*/
                width: 500px;
                margin-left: -250px;
                top:100px;
                }
                .custPopup2{
                background-color: white;
                border-width: 2px;
                border-style: solid;
                z-index: 9999;
                left: 50%;
                padding:10px;
                position: fixed;
                /* These are the 3 css properties you will need to change so the popup 
                displays in the center of the screen. First set the width. Then set 
                margin-left to negative half of what the width is. You can add 
                the height property for a fixed size pop up if you want.*/
                width: 200px;
                margin-left: -250px;
                top:100px;
                }
                .popupBackground{
                background-color:black;
                opacity: 0.20;
                filter: alpha(opacity = 20);
                position: fixed;
                width: 100%;
                height: 100%;
                top: 0;
                left: 0;
                z-index: 9998;
                }
                
               .BBGpopupBackground{
                    background-color:black;
                    opacity: 0.20;
                    filter: alpha(opacity = 20);
                    position: absolute;
                    width: 100%;
                    height: 100%;
                    top: 0;
                    left: 0;
                    z-index: 9998;
                    }
                    .noHeader{
                    display:none;
                    }
                    .rowColor{
                    background-color:#ffcccc;   
                    font-weight:bold;
        }
            .BBGcustPopup{
                background-color: white;
                height:450px;
                width:900px;
                border-width: 2px;
                border-style: solid;
                z-index: 9999;
                position: fixed;
                top:120px;
                overflow-x:scroll;
            }
                 .BAMpopupBackground{
                background-color:black;
                opacity: 0.20;
                filter: alpha(opacity = 20);
                position: absolute;
                width: 100%;
                height: 100%;
                top: 0;
                left:0px;
                z-index: 9998;
                }
              
                
                 .BAMcustPopup{
                background-color: white;
                border-width: 2px;
                border-style: solid;
                z-index: 9999;
                position: absolute;
                top:40px;
                left:40px;
                }
                
                .BenfpopupBackground{
                background-color:black;
                opacity: 0.20;
                filter: alpha(opacity = 20);
                position: absolute;
                width: 100%;
                height: 100%;
                top: 0;
                left:0px;
                z-index: 9998;
                }
                     
                 .BenfcustPopup{
                background-color: white;
                height:510px;
                width:850px;
                border-width: 2px;
                border-style: solid;
                z-index: 9999;
                position: absolute;
                top:120px;
                left:60px;
                overflow-x:scroll;
                
                }
                
              /*  .editbenfpopupBackground{
                background-color:black;
                opacity: 0.20;
                filter: alpha(opacity = 20);
                position: absolute;
                width: 100%;
                height: 100%;
                top: 0;
                left:0px;
                z-index: 9998;
                 }
                
                .editbenfcustPopup{
                background-color: white;
                border-width: 2px;
                height:465px;
                width:852px;
                border-style: solid;
                z-index: 9999;
                position: absolute;
                top:120px;
                left:250px;
                }*/
                
                input::-webkit-input-placeholder { font-size: 7pt;}
                input::-moz-placeholder { font-size: 10pt; color:GrayText;}
                input:-ms-input-placeholder { font-size: 7pt;}
                
                .input-icon {
                  position: relative;
                }

                .input-icon > i {
                  position: absolute;
                  display: block;
                  transform: translate(0, -50%);
                  top:45%;
                  pointer-events: none;
                  width: 25px;
                  text-align: center;
                  font-style: normal;
                  z-index:9998;
                }
                
                .input-icon > input {
                  padding-left: 25px;
                  padding-right: 0;
                }
                select {
                  border: 1px solid #111;
                  background: transparent;
                  width: 150px;
                  padding: 2px;
                  font-size: 12px;
                  border: 1px solid #ccc;
                  height: 24px;
                  -webkit-appearance: none;
                  -moz-appearance: none;
                  appearance: none;
                }
             .helpText{
                z-index:10000;
                }
                
            </style>
    
    <script>
        var j$ = jQuery.noConflict();
        var totalvalidatedamount=0;
        var edittotalvalidatedamount=0;
        var cancelflg = "false";
        var profilee = '{!profilename}';
        var projState = '{!projState}';
        var rolename = '{!rolename}';
        j$(document).ready(function() {
        if((projState == 'Complete' || projState =='Closed') && (rolename == 'QIPP Project Lead')) {
                //j$("[id*='editButton']").hide();
                j$("[id*='BAMapping']").hide();
                j$("[id*='addBenefit']").hide();
                j$("[id*='editBenefit']").hide();
                j$("[id*='deleteBenefit']").hide();
                j$("[id*='BenefitsOverview']").hide();
                j$("[id*='closeviewpopup']").hide();
                j$("[id*='Adddistribution']").hide();
                j$("[id*='editpipe']").hide();
                j$("[id*='deletepipe']").hide();
            }
            if(projState =='Closed' && rolename == 'QIPP Portfolio Owner') {
                //j$("[id*='editButton']").hide();
                j$("[id*='BAMapping']").hide();
                j$("[id*='editpipe']").hide();
                j$("[id*='deletepipe']").hide();
                j$("[id*='addBenefit']").hide();
                j$("[id*='editBenefit']").hide();
                j$("[id*='deleteBenefit']").hide();
                j$("[id*='BenefitsOverview']").hide();
                j$("[id*='closeviewpopup']").hide();
                j$("[id*='Adddistribution']").hide();
            }
            if(projState =='Complete' && (rolename == 'QIPP Portfolio Owner')) {
                j$("[id*='BAMapping']").show();
                j$("[id*='editpipe']").hide();
                j$("[id*='deletepipe']").hide();
                j$("[id*='addBenefit']").hide();
                j$("[id*='editBenefit']").hide();
                j$("[id*='deleteBenefit']").hide();
                j$("[id*='BenefitsOverview']").hide();
                j$("[id*='closeviewpopup']").hide();
                j$("[id*='Adddistribution']").hide();
            }   
        if(document.getElementById('pg:frm:pb:bgGroupSection:pbTableMultipleBG:0:mainBGdefault') != null){
            document.getElementById('pg:frm:pb:bgGroupSection:pbTableMultipleBG:0:mainBGdefault').readOnly=true;}
            bbgreadonly();
            editclonesum();
        });
        
            function refreshBAM(){
                refreshBAMSection();
            }
            function myTimeOut(){
                setTimeout(function(){
                  
                }, 2000);    
            }
            //--Added by Rahul(23-08-2016)--End--//     
            
            //added by Haripriya
            function CloseBenefit(){
                location.refresh(true);
            }
            function projectCreation(){
               var win = window.open("/00O0P000002F3rt?pv0={!str}", '_blank');                                   
               // var win = window.open("apex/QIPP_Project_Record_Types_Page?retURL=home&urlfrom=home&save_new=1&sfdc.override=1", '_Parent'); 
               win.focus();
           }
           
                function sumplanned(){
                        var sumofplannedamt=0;
                        var eleAmount = 0;
                        j$('.totalplamount').each(function(index, ele){
                        eleAmount = parseFloat(j$(ele).val().replace(/,/g,"") || 0).toFixed(1);
                        sumofplannedamt = parseFloat(sumofplannedamt) + parseFloat(eleAmount);
                       if(eleAmount!=0)
                        {
                        j$(ele).val(eleAmount);
                        
                        }
                        });
                        if(sumofplannedamt!=0)
                        {
                        document.getElementById('pg:frm:pb:benefitLineItem:addbenefittable:pltotal').value=sumofplannedamt.toFixed(1);
                        }
                        else
                        {
                            document.getElementById('pg:frm:pb:benefitLineItem:addbenefittable:pltotal').value="-";
                        }
                        
                                     }
                
                 function sumachieved(){
                        var sumofachievedamt=0;
                        var eleAmount = 0;
                        j$('.totalachamount').each(function(index, ele){
                        eleAmount = parseFloat(j$(ele).val().replace(/,/g,"") || 0).toFixed(1);
                        sumofachievedamt = parseFloat(sumofachievedamt) + parseFloat(eleAmount);
                        if(eleAmount!=0)
                        {
                        j$(ele).val(eleAmount);
                        
                        }
                        });
                         if(sumofachievedamt!=0)
                        {
                        document.getElementById('pg:frm:pb:benefitLineItem:addbenefittable:achtotal').value=sumofachievedamt.toFixed(1);
                        }
                        else
                        {
                           document.getElementById('pg:frm:pb:benefitLineItem:addbenefittable:achtotal').value="-";  
                        }
                                     }
                
                 function sumfuture(){
                        
                        var sumoffutureamt=0;
                        var eleAmount = 0;
                        j$('.totalfutamount').each(function(index, ele){
                        eleAmount = parseFloat(j$(ele).val().replace(/,/g,"") || 0).toFixed(1);
                        sumoffutureamt = parseFloat(sumoffutureamt) + parseFloat(eleAmount);
                        if(eleAmount!=0)
                        {
                        j$(ele).val(eleAmount);
                        
                        }
                        });
                        if(sumoffutureamt!=0)
                        {
                        document.getElementById('pg:frm:pb:benefitLineItem:addbenefittable:futtotal').value=sumoffutureamt.toFixed(1);
                        }
                        else
                        {
                           document.getElementById('pg:frm:pb:benefitLineItem:addbenefittable:futtotal').value="-"; 
                        }
                                    }
     
                function clonesum(){
               
                        sumplanned();
                        sumachieved();
                        sumfuture();
                    }
                     function validationamount(){
                        
                         if((document.getElementById('pg:frm:pb:benefitLineItem:addbenefittable:futtotal').value) != null){
                         var futuretotal = document.getElementById('pg:frm:pb:benefitLineItem:addbenefittable:futtotal').value;
                         if(futuretotal=="" || futuretotal=="-")
                         {
                             futuretotal=0;
                         }
                         }
                         if((document.getElementById('pg:frm:pb:benefitLineItem:addbenefittable:achtotal').value) != null){
                         var achievedtotal = document.getElementById('pg:frm:pb:benefitLineItem:addbenefittable:achtotal').value;
                         if(achievedtotal=="" || achievedtotal=="-")
                         {
                             achievedtotal=0;
                         }
                         }
                         totalvalidatedamount = parseFloat(futuretotal) +parseFloat(achievedtotal);
                         if(totalvalidatedamount >1000) 
                         {
                            document.getElementById("pg:frm:pb:benifitSaveButton").disabled = true;
                            document.getElementById("pg:frm:pb:benifitSaveButton").value = 'Saving...';
                            if(confirm("QIPP project benefits must be recorded in Kilo Euro (k€) units [ie.1 k€ = 1000€].\n\n Please correct the numbers if the benefits are not recorded in k€.\n\n Do You Want to Continue ? Press Ok to Proceed and Cancel to cancel.") == true){
                                //return true;
                                cancelflg = "true";
                            }
                            else{
                               return false; 
                               cancelflg = "false";
                               document.getElementById("pg:frm:pb:benifitSaveButton").disabled = false;
                               document.getElementById("pg:frm:pb:benifitSaveButton").value = 'Save & Close';
                            }
                         }
                         document.getElementById("pg:frm:pb:benifitSaveButton").disabled = true;
                         document.getElementById("pg:frm:pb:benifitSaveButton").value = 'Saving...';
                         doSubmit();
                    }
                    
                     function SaveBenefits(){
                          var errormsg = '{!benifitsErrorMessages}';
                          if(totalvalidatedamount >1000 && cancelflg == "false"){
                          document.getElementById("pg:frm:pb:benifitSaveButton").disabled = false;
                          document.getElementById("pg:frm:pb:benifitSaveButton").value = 'Save & Close';
                          }
                          else if(totalvalidatedamount >1000 && cancelflg == "true"){
                          document.getElementById("pg:frm:pb:benifitSaveButton").disabled = true;
                          document.getElementById("pg:frm:pb:benifitSaveButton").value = 'Saving...';
                          }
                          else if(errormsg == "false"){
                          document.getElementById("pg:frm:pb:benifitSaveButton").disabled = true;
                          document.getElementById("pg:frm:pb:benifitSaveButton").value = 'Saving...';
                          }else{
                          document.getElementById("pg:frm:pb:benifitSaveButton").disabled = false;
                          document.getElementById("pg:frm:pb:benifitSaveButton").value = 'Save & Close';
                          }
                      } 
                  
                    
                    function editvalidationamount(){
                         
                         if((document.getElementById('pg:frm:pb:pbeditbenf:benefitLineItemEdit:pbtableeditbenf:achtotal').value)!= null){
                         var editachievedtotal = document.getElementById('pg:frm:pb:pbeditbenf:benefitLineItemEdit:pbtableeditbenf:achtotal').value;
                         if(editachievedtotal=="" || editachievedtotal=="-")
                         {
                             editachievedtotal=0;
                         }
                         }
                         if((document.getElementById('pg:frm:pb:pbeditbenf:benefitLineItemEdit:pbtableeditbenf:futtotal').value)!= null){
                         var editfuturetotal = document.getElementById('pg:frm:pb:pbeditbenf:benefitLineItemEdit:pbtableeditbenf:futtotal').value;
                         if(editfuturetotal=="" || editfuturetotal=="-")
                         {
                             editfuturetotal=0;
                         }
                         }
                         edittotalvalidatedamount = parseFloat(editfuturetotal) +parseFloat(editachievedtotal); 
                         if(edittotalvalidatedamount >1000) 
                         {
                            document.getElementById("pg:frm:pb:pbeditbenf:pbeditbuttons:benifitEditSaveButton").disabled = true;
                            document.getElementById("pg:frm:pb:pbeditbenf:pbeditbuttons:benifitEditSaveButton").value = 'Saving...';
                            if(confirm("QIPP project benefits must be recorded in Kilo Euro (k€) units [ie.1 k€ = 1000€].\n\n Please correct the numbers if the benefits are not recorded in k€.\n\n Do You Want to Continue ? Press Ok to Proceed and Cancel to cancel.") == true){
                                //return true;
                                cancelflg = "true";
                            }
                            else{
                               return false;
                               cancelflg = "false";
                               document.getElementById("pg:frm:pb:pbeditbenf:pbeditbuttons:benifitEditSaveButton").disabled = false;
                               document.getElementById("pg:frm:pb:pbeditbenf:pbeditbuttons:benifitEditSaveButton").value = 'Save & Close';
                            }
                         } 
                         
                           document.getElementById("pg:frm:pb:pbeditbenf:pbeditbuttons:benifitEditSaveButton").disabled = true;
                           document.getElementById("pg:frm:pb:pbeditbenf:pbeditbuttons:benifitEditSaveButton").value = 'Saving...';
                           doeditSubmit();
                    }
               
                     function editSaveBenefits(){
                      var errormsg = '{!benifitsErrorMessages}';
                      if(edittotalvalidatedamount >1000 && cancelflg == "false"){
                      document.getElementById("pg:frm:pb:pbeditbenf:pbeditbuttons:benifitEditSaveButton").disabled = false;
                      document.getElementById("pg:frm:pb:pbeditbenf:pbeditbuttons:benifitEditSaveButton").value = 'Save & Close';
                      }
                      else if(edittotalvalidatedamount >1000 && cancelflg == "true"){
                      document.getElementById("pg:frm:pb:pbeditbenf:pbeditbuttons:benifitEditSaveButton").disabled = true;
                      document.getElementById("pg:frm:pb:pbeditbenf:pbeditbuttons:benifitEditSaveButton").value = 'Saving...';
                      }
                      else if(errormsg == "false"){
                      document.getElementById("pg:frm:pb:pbeditbenf:pbeditbuttons:benifitEditSaveButton").disabled = true;
                      document.getElementById("pg:frm:pb:pbeditbenf:pbeditbuttons:benifitEditSaveButton").value = 'Saving...';
                      }else{
                      document.getElementById("pg:frm:pb:pbeditbenf:pbeditbuttons:benifitEditSaveButton").disabled = false;
                      document.getElementById("pg:frm:pb:pbeditbenf:pbeditbuttons:benifitEditSaveButton").value = 'Save & Close';
                      }
                  } 
                    
                   
            function editsumplanned()
                {
                 var sumofplannedamt=0;
                        var eleAmount = 0;
                        j$('.edittotalplamount').each(function(index, ele){
                        eleAmount = parseFloat(j$(ele).val().replace(/,/g,"") || 0).toFixed(1);
                        sumofplannedamt = parseFloat(sumofplannedamt) + parseFloat(eleAmount);
                        if(eleAmount!=0)
                        {
                        j$(ele).val(eleAmount);
                        
                        }
                        });
                if(document.getElementById('pg:frm:pb:pbeditbenf:benefitLineItemEdit:pbtableeditbenf:pltotal') != null){
                document.getElementById('pg:frm:pb:pbeditbenf:benefitLineItemEdit:pbtableeditbenf:pltotal').value=sumofplannedamt.toFixed(1);
                }
                    if(sumofplannedamt!=0 && document.getElementById('pg:frm:pb:pbeditbenf:benefitLineItemEdit:pbtableeditbenf:pltotal')!=null)
                    {
                        document.getElementById('pg:frm:pb:pbeditbenf:benefitLineItemEdit:pbtableeditbenf:pltotal').value=sumofplannedamt.toFixed(1);
                    }
                
                     if(sumofplannedamt==0 && document.getElementById('pg:frm:pb:pbeditbenf:benefitLineItemEdit:pbtableeditbenf:pltotal')!=null)
                    {
                        document.getElementById('pg:frm:pb:pbeditbenf:benefitLineItemEdit:pbtableeditbenf:pltotal').value="-";
                    }
                }
                
                
            function editsumachieved()
                {
                        var sumofachievedamt=0;
                        var eleAmount = 0;
                        j$('.edittotalachamount').each(function(index, ele){
                        eleAmount = parseFloat(j$(ele).val().replace(/,/g,"") || 0).toFixed(1);
                        sumofachievedamt = parseFloat(sumofachievedamt) + parseFloat(eleAmount);
                         if(eleAmount!=0)
                        {
                        j$(ele).val(eleAmount);
                        
                        }
                        });
                if(document.getElementById('pg:frm:pb:pbeditbenf:benefitLineItemEdit:pbtableeditbenf:achtotal') !=null){
                document.getElementById('pg:frm:pb:pbeditbenf:benefitLineItemEdit:pbtableeditbenf:achtotal').value=sumofachievedamt.toFixed(1);
                }
                    if(sumofachievedamt!=0 && document.getElementById('pg:frm:pb:pbeditbenf:benefitLineItemEdit:pbtableeditbenf:achtotal')!=null)
                    {
                         document.getElementById('pg:frm:pb:pbeditbenf:benefitLineItemEdit:pbtableeditbenf:achtotal').value=sumofachievedamt.toFixed(1);
                    }
                   if(sumofachievedamt==0 && document.getElementById('pg:frm:pb:pbeditbenf:benefitLineItemEdit:pbtableeditbenf:achtotal')!=null)
                    {
                         document.getElementById('pg:frm:pb:pbeditbenf:benefitLineItemEdit:pbtableeditbenf:achtotal').value="-";
                    }
                }
                
                function editsumfuture()
                {
                        var sumoffutureamt=0;
                        var eleAmount = 0;
                        j$('.edittotalfutamount').each(function(index, ele){
                        eleAmount = parseFloat(j$(ele).val().replace(/,/g,"") || 0).toFixed(1);
                        sumoffutureamt = parseFloat(sumoffutureamt) + parseFloat(eleAmount);
                        if(eleAmount!=0)
                        {
                        j$(ele).val(eleAmount);
                        
                        }
                        });
                if(sumoffutureamt!=0 && document.getElementById('pg:frm:pb:pbeditbenf:benefitLineItemEdit:pbtableeditbenf:futtotal') !=null)
                 {
                     document.getElementById('pg:frm:pb:pbeditbenf:benefitLineItemEdit:pbtableeditbenf:futtotal').value=sumoffutureamt.toFixed(1);
                 }
                if(sumoffutureamt==0 && document.getElementById('pg:frm:pb:pbeditbenf:benefitLineItemEdit:pbtableeditbenf:futtotal') !=null)
                 {
                     document.getElementById('pg:frm:pb:pbeditbenf:benefitLineItemEdit:pbtableeditbenf:futtotal').value="-";
                 }
                }
     
               function editclonesum(){
                editsumplanned();
                editsumachieved();
                editsumfuture();
            }
            
           
               /* function sumBBG(){
                    
                        //var sumofBBGamt=document.getElementById('page:form:pblock:bgGroupSection:pbTableMultipleBG:0:mainBGdefault').value;
                        var sumofBBGamt1=0;
                        j$('.BBGtotal').each(function(index, ele){
                        sumofBBGamt1 += (parseFloat(j$(ele).val()) || 0);
                        });
                        if(sumofBBGamt1>95)
                        {
                            alert("Sum OF BBG % Distribution should not be Greater than 100%")
                        }
                        document.getElementById('pg:frm:pb:bgGroupSection:pbTableMultipleBG:0:mainBGdefault').value=((100)-(sumofBBGamt1));
                        bbgreadonly();    
                    
                }
                
                function bbgreadonly()
                     {
                          if(document.getElementById('pg:frm:pb:bgGroupSection:pbTableMultipleBG:0:mainBGdefault') != null){
                         document.getElementById('pg:frm:pb:bgGroupSection:pbTableMultipleBG:0:mainBGdefault').readOnly=true;}
                      }
                      */
                function isNumberKey(evt)
                  {
                     
                     var charCode = (evt.which) ? evt.which : event.keyCode
                   /*  if (charCode > 31 && (charCode < 46 || charCode > 57))
                       {
                        alert("Please Enter Euros in Numbers");        
                        return false;
                       }
                     return true;*/
                     
                      if (charCode == 8 || charCode == 37) {
                            return true;
                          } else if (charCode == 46 && j$(this).val().indexOf('.') != -1) {
                               alert("Enter Savings as Kilo Euros (k€)"); 
                               return false;
                          } else if (charCode > 31 && charCode != 46 && (charCode < 48 || charCode > 57)) {
                               alert("Enter Savings as Kilo Euros (k€)"); 
                               return false;
                          }
                          if (charCode == 13)
                            {
                                alert("Pressing Enter Key is Not Allowed"); 
                                return false;   
                            } 
                          return true;
                  }
                   function preventEnterKey(evt)
                     {
                         var charCode = (evt.which) ? evt.which : event.keyCode
                            if (charCode == 13)
                            {
                                alert("Pressing Enter Key is Not Allowed"); 
                                return false;   
                            } 
                        return true; 
                    }   
                  
                   function BBGOPValidationAmount()
                {
                        
                        var sumofBBGValamt1=0;
                        var BBGDefaultvalamt=0;
                        j$('.BBGOPtotal').each(function(index, ele){
                        sumofBBGValamt1 += parseFloat(j$(ele).val().replace(/,/g,"") || 0);
                        });
                        BBGDefaultvalamt={!bbgopvalamount};
                       // BBGDefaultvalamt=document.getElementById('page:form:pblock:bgGroupSection:pbTableMultipleBG:0:mainBGopval').value;
                        document.getElementById('pg:frm:pb:bgGroupSection:pbTableMultipleBG:0:mainBGopval').value=((BBGDefaultvalamt)-(sumofBBGValamt1)).toFixed(1);
                    // bbgreadonly();  
                }
               
                function BBGFIValidationAmount()
                {
                        
                        var sumofBBGValamt1=0;
                        var BBGDefaultvalamt=0;
                        j$('.BBGFItotal').each(function(index, ele){
                        sumofBBGValamt1 +=parseFloat(j$(ele).val().replace(/,/g,"") || 0);
                        });
                        BBGDefaultvalamt={!bbgfivalamount};
                       // BBGDefaultvalamt=document.getElementById('page:form:pblock:bgGroupSection:pbTableMultipleBG:0:mainBGfival').value;
                        document.getElementById('pg:frm:pb:bgGroupSection:pbTableMultipleBG:0:mainBGfival').value=((BBGDefaultvalamt)-(sumofBBGValamt1)).toFixed(1);
                    // bbgreadonly();  
                }
                 function BBGPOValidationAmount()
                {
                        
                        var sumofBBGValamt1=0;
                        var BBGDefaultvalamt=0;
                        j$('.BBGPOtotal').each(function(index, ele){
                        sumofBBGValamt1 += parseFloat(j$(ele).val().replace(/,/g,"") || 0);
                        });
                        BBGDefaultvalamt={!bbgprvalamount};
                        //BBGDefaultvalamt=document.getElementById('page:form:pblock:bgGroupSection:pbTableMultipleBG:0:mainBGprojval').value;
                        document.getElementById('pg:frm:pb:bgGroupSection:pbTableMultipleBG:0:mainBGprojval').value=((BBGDefaultvalamt)-(sumofBBGValamt1)).toFixed(1);
                    // bbgreadonly();  
                }
                 function BBGREValidationAmount()
                {
                       
                        var sumofBBGValamt1=0;
                        var BBGDefaultvalamt=0;
                        j$('.BBGREtotal').each(function(index, ele){
                        sumofBBGValamt1 += parseFloat(j$(ele).val().replace(/,/g,"") || 0);
                        });
                        BBGDefaultvalamt={!bbgrelvalamount};
                        //BBGDefaultvalamt=document.getElementById('page:form:pblock:bgGroupSection:pbTableMultipleBG:0:mainBGrealval').value;
                        document.getElementById('pg:frm:pb:bgGroupSection:pbTableMultipleBG:0:mainBGrealval').value=((BBGDefaultvalamt)-(sumofBBGValamt1)).toFixed(1);
                    // bbgreadonly();  
                }
              function bbgreadonly()
              {
                 if(document.getElementById('pg:frm:pb:bgGroupSection:pbTableMultipleBG:0:mainBGopval') != null){
                 document.getElementById('pg:frm:pb:bgGroupSection:pbTableMultipleBG:0:mainBGopval').readOnly=true;}
                 
                 if(document.getElementById('pg:frm:pb:bgGroupSection:pbTableMultipleBG:0:mainBGfival') != null){
                 document.getElementById('pg:frm:pb:bgGroupSection:pbTableMultipleBG:0:mainBGfival').readOnly=true;}
                 
                 if(document.getElementById('pg:frm:pb:bgGroupSection:pbTableMultipleBG:0:mainBGprojval') != null){
                 document.getElementById('pg:frm:pb:bgGroupSection:pbTableMultipleBG:0:mainBGprojval').readOnly=true;}
                 
                 if(document.getElementById('pg:frm:pb:bgGroupSection:pbTableMultipleBG:0:mainBGrealval') != null){
                 document.getElementById('pg:frm:pb:bgGroupSection:pbTableMultipleBG:0:mainBGrealval').readOnly=true;}
              }
             
              function isNumberKeyBBGfi(evt)
                  {
                     var charCode = (evt.which) ? evt.which : event.keyCode
                   
                     if(({!bbgfivalamount}!=0)){
                      if (charCode == 8 || charCode == 37) {
                            return true;
                          } else if (charCode == 46 && j$(this).val().indexOf('.') != -1) {
                              alert("Enter Amount in Numbers Only"); 
                               return false;
                          } else if (charCode > 31 && charCode != 46 && (charCode < 48 || charCode > 57)) {
                               alert("Enter Amount in Numbers Only");
                               return false;
                          }
                           if (charCode == 13)
                          {
                            alert("Pressing Enter Key is Not Allowed"); 
                            return false;   
                          }
                     }else { 
                               alert("BBG Validation Amount is 0,Amount cannot be Distributed");
                               return false;
                            }return true;
                  }
                  
                  function isNumberKeyBBGop(evt)
                  {
                     var charCode = (evt.which) ? evt.which : event.keyCode
                   
                     if(({!bbgopvalamount}!=0)){
                      if (charCode == 8 || charCode == 37) {
                            return true;
                          } else if (charCode == 46 && j$(this).val().indexOf('.') != -1) {
                              alert("Enter Amount in Numbers Only"); 
                               return false;
                          } else if (charCode > 31 && charCode != 46 && (charCode < 48 || charCode > 57)) {
                               alert("Enter Amount in Numbers Only");
                               return false;
                          }
                           if (charCode == 13)
                          {
                            alert("Pressing Enter Key is Not Allowed"); 
                            return false;   
                          }
                     }else { 
                               alert("BBG Validation Amount is 0,Amount cannot be Distributed");
                               return false;
                            }return true;
                  }
                  
                  function isNumberKeyBBGproj(evt)
                  {
                     var charCode = (evt.which) ? evt.which : event.keyCode
                   
                     if(({!bbgprvalamount}!=0)){
                      if (charCode == 8 || charCode == 37) {
                            return true;
                          } else if (charCode == 46 && j$(this).val().indexOf('.') != -1) {
                              alert("Enter Amount in Numbers Only"); 
                               return false;
                          } else if (charCode > 31 && charCode != 46 && (charCode < 48 || charCode > 57)) {
                               alert("Enter Amount in Numbers Only");
                               return false;
                          }
                           if (charCode == 13)
                          {
                            alert("Pressing Enter Key is Not Allowed"); 
                            return false;   
                          }
                     }else { 
                               alert("BBG Validation Amount is 0,Amount cannot be Distributed");
                               return false;
                            }return true;
                  }
                  
                   function isNumberKeyBBGrel(evt)
                    {
                     var charCode = (evt.which) ? evt.which : event.keyCode
                   
                     if(({!bbgrelvalamount}!=0)){
                      if (charCode == 8 || charCode == 37) {
                            return true;
                          } else if (charCode == 46 && j$(this).val().indexOf('.') != -1) {
                              alert("Enter Amount in Numbers Only"); 
                               return false;
                          } else if (charCode > 31 && charCode != 46 && (charCode < 48 || charCode > 57)) {
                               alert("Enter Amount in Numbers Only");
                               return false;
                          }
                           if (charCode == 13)
                          {
                            alert("Pressing Enter Key is Not Allowed"); 
                            return false;   
                          }
                          
                     }else { 
                               alert("BBG Validation Amount is 0,Amount cannot be Distributed");
                               return false;
                            }return true;
                  }
                
                 function saveBBG()
                    {
                       if(confirm("If Benefits Added/Modified in the Benefit Section after Benefitting Distribution,then all the added Benefitting Businesss Groups will be deleted other than Default Benefitting Group.Please Make sure Benefits are freezed and add Benefit Distribution to the project.")==true)
                        {
                          document.getElementById("pg:frm:pb:bgGroupSection:saveBBG").disabled = true;
                          document.getElementById("pg:frm:pb:bgGroupSection:saveBBG").value = 'Saving...';
                        }
                        else{
                           return false; 
                            document.getElementById("pg:frm:pb:bgGroupSection:saveBBG").disabled = false;
                               document.getElementById("pg:frm:pb:bgGroupSection:saveBBG").value = 'Save & Close';
                        }
                        doSave();
                    }
                    
                     function SaveBBGVal()
                   {
                      document.getElementById("pg:frm:pb:bgGroupSection:saveBBG").disabled = false;
                      document.getElementById("pg:frm:pb:bgGroupSection:saveBBG").value = 'Save & Close';
                   }
                
                        
                function CloseAndRefresh(){
                    debugger;
                        window.opener.location.href="/{!$CurrentPage.parameters.id}";
                        self.close();
                }
    </script>
    
    <apex:form id="frm">
    
        <apex:pageBlock id="pb" >  
<!-- BAM Section Start -->        
<!-- Added by Rahul(23-08-2016)--Start -->
<apex:actionFunction name="refreshBAMSection" action="{!callDummy}" rerender="opBAM,businessActivityDetails" oncomplete="closeBAMSection();myTimeOut();" />
<apex:actionFunction name="closeBAMSection" action="{!closePopupBAM}"/>
<!-- Added by Rahul(23-08-2016)--End -->
    <apex:pageBlockButtons location="top">
    </apex:pageBlockButtons>
    <!-- Added by Rahul(23-08-2016)--Start -->
    <apex:outputPanel id="opBAM">

    <!-- Added by Rahul(23-08-2016)--End -->
        <apex:pageBlockSection id="businessActivityDetails" columns="1" title="Business Activity Mapping Details" collapsible="false">
            <apex:commandButton value="Select/Edit Business Activity Mapping" action="{!showPopupBAM}" rendered="{!IF((($Profile.Name !='Nokia QIPP Project Viewer') && recIsLocked==false && projState != 'Complete' && projState !='Closed'),true,false)}"/>
                 <apex:commandButton value="View Business Activity Mapping" action="{!showPopupBAM}" rendered="{!IF((recIsLocked==true || projState =='Closed' || projState =='Complete'),true,false)}"/>
            <apex:pageblockTable value="{!BAMDetailsMap}" var="f" id="pbActivity">
                <apex:column headerValue="Business Activity" value="{!f.activityName}"/>
                <apex:column headerValue="Value Stream" value="{!f.valueStream}"/>
                <apex:column headerValue="Business Function" value="{!f.businessFunc}"/>                
            </apex:pageBlockTable>            
            
            <apex:pageBlockSectionItem >
            </apex:pageBlockSectionItem> 
                        
                <!-- <apex:commandButton value="Select/Edit Business Activity Mapping" action="{!showPopupBAM}" rendered="{!IF((($Profile.Name !='Nokia QIPP Project Viewer') && recIsLocked==false && projState != 'Complete' && projState !='Closed'),true,false)}"/>
                 <apex:commandButton value="View Business Activity Mapping" action="{!showPopupBAM}" rendered="{!IF((($Profile.Name !='Nokia QIPP Project Viewer') && recIsLocked==true && projState !='Closed'),true,false)}"/>-->
                    </apex:pageBlockSection>
                    </apex:outputPanel>
                     <apex:pageBlockSection id="pBlockSection" columns="1" >
                    
                   <apex:outputPanel id="popupBAM"> 
                    <apex:outputPanel id="popupBackgroundBAM" styleClass="BAMpopupBackground" layout="block" rendered="{!displayPopupBAM}" />
                    <apex:outputPanel id="custPopupBAM" styleClass="BAMcustPopup" layout="block" rendered="{!displayPopupBAM}" >
                         <iframe height="550px" id="theIframe" name="theIframe" src="/apex/Business_Activity_Mapping?projectID={!projID}" width="900px" style="border:none"> </iframe> 
                      <div align="center" draggable="false" >
                        
                     <!--  <apex:commandButton value="Close" action="{!closePopupBAM}"/>-->
                     </div>
                          </apex:outputPanel>  
                        </apex:outputPanel>

                    </apex:pageBlockSection>
                    
                <apex:pageblockSection id="benfitSec" title="Benefits" columns="1" collapsible="false" >
                           
                        <apex:pageBlock id="pblockbenfitSec"> 
                        
                            <apex:commandButton id="addBenefit" value="Add New Benefit (Improvement Measure)" action="{!showPopupBenf}" rendered="{!IF((($Profile.Name !='Nokia QIPP Project Viewer') && recIsLocked==false && projState != 'Complete'),true,false)}"/>
                            <br></br>
                            <apex:outputText rendered="{!if(((QIPP_Project__c.Total_Project_Validation_Amount__c > 1000) &&  (QIPP_Project__c.Project_State__c == 'In Progress' || QIPP_Project__c.Project_State__c == 'Not Started'||QIPP_Project__c.Project_State__c == 'On Hold')),true,false)}">
                                <font size="2" style="color:red;margin-left:00px;">Note :  QIPP project benefits must be recorded in Kilo Euro (k€) units [ie.1 k€ = 1000€].</font> <br/> 
                                <font size="2" style="color:red;margin-left:40px;">Please correct the numbers if the benefits are not recorded in k€.</font>
                                <br/> <br/> 
                            </apex:outputText>
                            
                            <apex:pageBlockTable value="{!Benefits_RelatedList}" id="pbtabledit" var="benifit_list" rendered="{!AND(NOT(ISNULL(Benefits_RelatedList)),Benefits_RelatedList.size>0)}" columnsWidth="10%,17%,12%,15%,11%,11%,11%,15%" >
                                <apex:column headerValue="Action" style="width:210px">
                                 <apex:commandLink id="viewBenefit" value="View" style="color:CornflowerBlue;text-decoration:none;" action="{!showPopupviewBenf}">
                                    <apex:param name="Benefitid" value="{!benifit_list.id}" assignTo="{!benefitid}"/>
                                 </apex:commandLink>
                                    <apex:outputLabel value=" | " rendered="{!IF((($Profile.Name !='Nokia QIPP Project Viewer') && recIsLocked==false && projState != 'Complete'),true,false)}"/>
                                 <apex:commandLink id="editBenefit" value="Edit" style="color:CornflowerBlue;text-decoration:none;" action="{!showPopupeditBenf}" rendered="{!IF((($Profile.Name !='Nokia QIPP Project Viewer') && recIsLocked==false && projState != 'Complete'),true,false)}">
                                        <apex:param name="editBenefitid" value="{!benifit_list.id}" assignTo="{!benefitid}"/>
                                 </apex:commandLink> 
                                    
                                   <apex:outputLabel value=" | " rendered="{!IF((($Profile.Name !='Nokia QIPP Project Viewer') && recIsLocked==false && projState != 'Complete'),true,false)}"/>
                                   <apex:outputLink id="deleteBenefit" style="color:CornflowerBlue;text-decoration:none;" value="/apex/QIPP_Benefit_View?delete={!benifit_list.id}&Projectid={!projectid}" onclick="if (!confirm('Are you sure you want to delete this benefit?')) return false" title="Delete"  rendered="{!IF((($Profile.Name !='Nokia QIPP Project Viewer') && recIsLocked==false && projState != 'Complete'),true,false)}" >Delete</apex:outputLink>
                                </apex:column>
                                <apex:column headerValue="Improvement Measure" >
                                    <apex:outputPanel rendered="{!IF(len(benifit_list.Improvement_Measure_Name__c)>30,true,false)}">                                  
                                        <apex:outputText title="{!benifit_list.Improvement_Measure_Name__c}" value="{!left(benifit_list.Improvement_Measure_Name__c,30)}..."></apex:outputText>
                                    </apex:outputpanel>
                                    <apex:outputPanel rendered="{!IF(len(benifit_list.Improvement_Measure_Name__c)<=30,true,false)}">                                  
                                        <apex:outputText title="{!benifit_list.Improvement_Measure_Name__c}" value="{!benifit_list.Improvement_Measure_Name__c}"></apex:outputText>
                                    </apex:outputpanel>
                                </apex:column>
                                <apex:column headerValue="Unit of Measure" >                                  
                                    <apex:outputField value="{!benifit_list.Unit_of_Measure__c}">
                                        <apex:inlineEditSupport rendered="false"/>
                                    </apex:outputField>
                                </apex:column>
                                <apex:column headerValue="Benefit Type"> 
                                    <apex:outputField value="{!benifit_list.Benefit_Type__c}"> 
                                        <apex:inlineEditSupport rendered="false"/>
                                    </apex:outputField>
                                </apex:column>
                               <apex:column headerValue="Planned (k€)">
                                    <apex:outputText value="{!benifit_list.Planned_Financial_Savings_Total__c}" rendered="{!AND((benifit_list.Benefit_Type__c == 'Financial Savings'),NOT(ISNULL(benifit_list.Planned_Financial_Savings_Total__c)),(benifit_list.Planned_Financial_Savings_Total__c)>0)}"/>
                                    <apex:outputText value="-" rendered="{!AND((benifit_list.Benefit_Type__c == 'Financial Savings'),NOT(ISNULL(benifit_list.Planned_Financial_Savings_Total__c)),(benifit_list.Planned_Financial_Savings_Total__c)==0)}"/>

                                    <apex:outputText value="{!benifit_list.Planned_Operational_Savings_Total__c}" rendered="{!AND((benifit_list.Benefit_Type__c == 'Operational Savings'),NOT(ISNULL(benifit_list.Planned_Operational_Savings_Total__c)),(benifit_list.Planned_Operational_Savings_Total__c)>0)}"/>
                                    <apex:outputText value="-" rendered="{!AND((benifit_list.Benefit_Type__c == 'Operational Savings'),NOT(ISNULL(benifit_list.Planned_Operational_Savings_Total__c)),(benifit_list.Planned_Operational_Savings_Total__c)==0)}"/>

                                    <apex:outputText value="{!benifit_list.Planned_Projected_Savings_Total__c}" rendered="{!AND((benifit_list.Benefit_Type__c == 'Projected Revenue'),NOT(ISNULL(benifit_list.Planned_Projected_Savings_Total__c)),(benifit_list.Planned_Projected_Savings_Total__c)>0)}"/>
                                    <apex:outputText value="-" rendered="{!AND((benifit_list.Benefit_Type__c == 'Projected Revenue'),NOT(ISNULL(benifit_list.Planned_Projected_Savings_Total__c)),(benifit_list.Planned_Projected_Savings_Total__c)==0)}"/>
                    
                                    <apex:outputText value="{!benifit_list.Planned_Realized_Savings_Total__c}" rendered="{!AND((benifit_list.Benefit_Type__c == 'Realized Revenue'),NOT(ISNULL(benifit_list.Planned_Realized_Savings_Total__c)),(benifit_list.Planned_Realized_Savings_Total__c)>0)}"/>
                                    <apex:outputText value="-" rendered="{!AND((benifit_list.Benefit_Type__c == 'Realized Revenue'),NOT(ISNULL(benifit_list.Planned_Realized_Savings_Total__c)),(benifit_list.Planned_Realized_Savings_Total__c)==0)}"/>
                                
                                </apex:column>
                                <apex:column headerValue="Achieved (k€)">
                                    <apex:outputText value="{!benifit_list.Achieved_Financial_Savings_Total__c}" rendered="{!AND((benifit_list.Benefit_Type__c == 'Financial Savings'),NOT(ISNULL(benifit_list.Achieved_Financial_Savings_Total__c)),(benifit_list.Achieved_Financial_Savings_Total__c)>0)}"/>
                                    <apex:outputText value="-" rendered="{!AND((benifit_list.Benefit_Type__c == 'Financial Savings'),NOT(ISNULL(benifit_list.Achieved_Financial_Savings_Total__c)),(benifit_list.Achieved_Financial_Savings_Total__c)==0)}"/>

                                    <apex:outputText value="{!benifit_list.Achieved_Operational_Savings_Total__c}" rendered="{!AND((benifit_list.Benefit_Type__c == 'Operational Savings'),NOT(ISNULL(benifit_list.Achieved_Operational_Savings_Total__c)),(benifit_list.Achieved_Operational_Savings_Total__c)>0)}"/>
                                    <apex:outputText value="-" rendered="{!AND((benifit_list.Benefit_Type__c == 'Operational Savings'),NOT(ISNULL(benifit_list.Achieved_Operational_Savings_Total__c)),(benifit_list.Achieved_Operational_Savings_Total__c)==0)}"/>

                                    <apex:outputText value="{!benifit_list.Achieved_Projected_Savings_Total__c}" rendered="{!AND((benifit_list.Benefit_Type__c == 'Projected Revenue'),NOT(ISNULL(benifit_list.Achieved_Projected_Savings_Total__c)),(benifit_list.Achieved_Projected_Savings_Total__c)>0)}"/>
                                    <apex:outputText value="-" rendered="{!AND((benifit_list.Benefit_Type__c == 'Projected Revenue'),NOT(ISNULL(benifit_list.Achieved_Projected_Savings_Total__c)),(benifit_list.Achieved_Projected_Savings_Total__c)==0)}"/>
                    
                                    <apex:outputText value="{!benifit_list.Achieved_Realized_Savings_Total__c}" rendered="{!AND((benifit_list.Benefit_Type__c == 'Realized Revenue'),NOT(ISNULL(benifit_list.Achieved_Realized_Savings_Total__c)),(benifit_list.Achieved_Realized_Savings_Total__c)>0)}"/>
                                    <apex:outputText value="-" rendered="{!AND((benifit_list.Benefit_Type__c == 'Realized Revenue'),NOT(ISNULL(benifit_list.Achieved_Realized_Savings_Total__c)),(benifit_list.Achieved_Realized_Savings_Total__c)==0)}"/>
                                </apex:column>
                                <apex:column headerValue="Future (k€)">
                                  <apex:outputText value="{!benifit_list.Future_Financial_Savings_Total__c}" rendered="{!AND((benifit_list.Benefit_Type__c == 'Financial Savings'),NOT(ISNULL(benifit_list.Future_Financial_Savings_Total__c)),(benifit_list.Future_Financial_Savings_Total__c)>0)}"/>
                                    <apex:outputText value="-" rendered="{!AND((benifit_list.Benefit_Type__c == 'Financial Savings'),NOT(ISNULL(benifit_list.Future_Financial_Savings_Total__c)),(benifit_list.Future_Financial_Savings_Total__c)==0)}"/>

                                    <apex:outputText value="{!benifit_list.Future_Operational_Savings_Total__c}" rendered="{!AND((benifit_list.Benefit_Type__c == 'Operational Savings'),NOT(ISNULL(benifit_list.Future_Operational_Savings_Total__c)),(benifit_list.Future_Operational_Savings_Total__c)>0)}"/>
                                    <apex:outputText value="-" rendered="{!AND((benifit_list.Benefit_Type__c == 'Operational Savings'),NOT(ISNULL(benifit_list.Future_Operational_Savings_Total__c)),(benifit_list.Future_Operational_Savings_Total__c)==0)}"/>

                                    <apex:outputText value="{!benifit_list.Future_Projected_Savings_Total__c}" rendered="{!AND((benifit_list.Benefit_Type__c == 'Projected Revenue'),NOT(ISNULL(benifit_list.Future_Projected_Savings_Total__c)),(benifit_list.Future_Projected_Savings_Total__c)>0)}"/>
                                    <apex:outputText value="-" rendered="{!AND((benifit_list.Benefit_Type__c == 'Projected Revenue'),NOT(ISNULL(benifit_list.Future_Projected_Savings_Total__c)),(benifit_list.Future_Projected_Savings_Total__c)==0)}"/>
                    
                                    <apex:outputText value="{!benifit_list.Future_Realized_Savings_Total__c}" rendered="{!AND((benifit_list.Benefit_Type__c == 'Realized Revenue'),NOT(ISNULL(benifit_list.Future_Realized_Savings_Total__c)),(benifit_list.Future_Realized_Savings_Total__c)>0)}"/>
                                    <apex:outputText value="-" rendered="{!AND((benifit_list.Benefit_Type__c == 'Realized Revenue'),NOT(ISNULL(benifit_list.Future_Realized_Savings_Total__c)),(benifit_list.Future_Realized_Savings_Total__c)==0)}"/>
                                </apex:column>
                                <apex:column headerValue="Validation Amount (k€)">
                                    
                                    <apex:outputText value="{!benifit_list.Benefit_Amount_Achieved_Future_k__c}" rendered="{!AND((benifit_list.Benefit_Type__c == 'Financial Savings'),NOT(ISNULL(benifit_list.Benefit_Amount_Achieved_Future_k__c)),(benifit_list.Benefit_Amount_Achieved_Future_k__c)>0)}"/>
                                    <apex:outputText value="-" rendered="{!AND((benifit_list.Benefit_Type__c == 'Financial Savings'),NOT(ISNULL(benifit_list.Benefit_Amount_Achieved_Future_k__c)),(benifit_list.Benefit_Amount_Achieved_Future_k__c)==0)}"/>
                                  
                                    
                                   <apex:outputText value="{!benifit_list.Benefit_Operational_Achieved_Future_k__c}" rendered="{!AND((benifit_list.Benefit_Type__c == 'Operational Savings'),NOT(ISNULL(benifit_list.Benefit_Operational_Achieved_Future_k__c)),(benifit_list.Benefit_Operational_Achieved_Future_k__c)>0)}"/>
                                    <apex:outputText value="-" rendered="{!AND((benifit_list.Benefit_Type__c == 'Operational Savings'),NOT(ISNULL(benifit_list.Benefit_Operational_Achieved_Future_k__c)),(benifit_list.Benefit_Operational_Achieved_Future_k__c)==0)}"/>
                                    
                                      <apex:outputText value="{!benifit_list.Benefit_Projected_Achieved_Future_k__c}" rendered="{!AND((benifit_list.Benefit_Type__c == 'Projected Revenue'),NOT(ISNULL(benifit_list.Benefit_Projected_Achieved_Future_k__c)),(benifit_list.Benefit_Projected_Achieved_Future_k__c)>0)}"/>
                                    <apex:outputText value="-" rendered="{!AND((benifit_list.Benefit_Type__c == 'Projected Revenue'),NOT(ISNULL(benifit_list.Benefit_Projected_Achieved_Future_k__c)),(benifit_list.Benefit_Projected_Achieved_Future_k__c)==0)}"/>
                                    
                                      <apex:outputText value="{!benifit_list.Benefit_Realized_Achieved_Future_k__c}" rendered="{!AND((benifit_list.Benefit_Type__c == 'Realized Revenue'),NOT(ISNULL(benifit_list.Benefit_Realized_Achieved_Future_k__c)),(benifit_list.Benefit_Realized_Achieved_Future_k__c)>0)}"/>
                                    <apex:outputText value="-" rendered="{!AND((benifit_list.Benefit_Type__c == 'Realized Revenue'),NOT(ISNULL(benifit_list.Benefit_Realized_Achieved_Future_k__c)),(benifit_list.Benefit_Realized_Achieved_Future_k__c)==0)}"/>
                                </apex:column>
                          </apex:pageBlockTable>
           

                            <apex:pageBlockTable value="{!benefitGrandTotalsList}" headerClass="noHeader" rowClasses="rowColor" var="benifit_grandTotal" rendered="{!AND(NOT(ISNULL(Benefits_RelatedList)),Benefits_RelatedList.size>0)}" columnsWidth="15%,24%,15%,11%,11%,11%,15%">
                                <apex:column headerValue="">
                                    <apex:outputText rendered="true"/>
                                    
                                </apex:column>
                                
                                <apex:column headerValue=" ">
                                    <apex:outputText rendered="true"/>
                                    
                                </apex:column>
                                <apex:column headerValue="Grand Totals ">
                                    <apex:outputText value="Total Project Benefits" rendered="true" style="float:left"/>
                                    
                                </apex:column>
                                <apex:column headerValue="Planned (k€)">
                                    <apex:outputText value="{!benifit_grandTotal.plannedGTotalEuro}" rendered="true" style="float:left"/>
                                    
                                </apex:column>
                                <apex:column headerValue="Achieved (k€)">
                                    <apex:outputText value="{!benifit_grandTotal.achievedGTotalEuro}" rendered="true" style="float:left"/>
                                    
                                </apex:column>
                                <apex:column headerValue="Future (k€)">
                                    <apex:outputText value="{!benifit_grandTotal.futureGTotalEuro}" rendered="true" style="float:left"/>
                                    
                                </apex:column>
                                <apex:column headerValue="Validation Amount (k€)">
                                    <apex:outputText value="{!benifit_grandTotal.validationAmountEuro}" rendered="true" style="float:left"/>
                                </apex:column>    
                                
                            </apex:pageBlockTable>
                            
                            <apex:pageBlockSection rendered="{!OR(ISNULL(Benefits_RelatedList),Benefits_RelatedList.size=0)}"  columns="1">
                                        <b> <i>There are NO Benefits to display.</i></b>
                            </apex:pageBlockSection>
                             <apex:commandButton id="BenefitsOverview" value="Benefits Overview" onclick="projectCreation()" rendered="{!IF((($Profile.Name !='Nokia QIPP Project Viewer') && projState != 'Complete' && recIsLocked==false && Benefits_RelatedList!=null && Benefits_RelatedList.size>0),true,false)}"/>
                         </apex:pageBlock>
                            
                    </apex:pageblockSection>
<!-- Start of View -->
                          
                         <apex:outputPanel id="popupviewBenf"> 
                        <apex:outputPanel id="popupcustviewBenf" styleClass="BenfpopupBackground" layout="block" rendered="{!displayPopupviewBenf}" />
                        <apex:outputPanel id="custPopupviewBenf" styleClass="BenfcustPopup" layout="block" rendered="{!displayPopupviewBenf}" >
                              <apex:pageBlockSection columns="2" title="Improvement Measure" collapsible="false">
                                </apex:pageBlockSection>
                                <apex:pageBlockSection id="pbsmeasureview" columns="2">
                                  <apex:pageBlockSectionItem helpText="{!$ObjectType.QIPP_Benefit__c.fields.Improvement_Measure_Name__c.inlineHelpText}">
                                    <apex:outputLabel value="Improvement Measure"/>
                                   <apex:outputtext value="{!benifit2.Improvement_Measure_Name__c}" />
                                   </apex:pageBlockSectionItem>
                               
                                 <apex:pageBlockSectionItem id="benefitTypeItemview" helpText="{!$ObjectType.QIPP_Benefit__c.fields.Benefit_Type__c.inlineHelpText}">
                                    <apex:outputLabel value="Benefit Type" style="display:inline-block;width:70px"/>
                                   <apex:outputtext value="{!benifit2.Benefit_Type__c}" />
                             </apex:pageBlockSectionItem>
                                
                                 <apex:pageBlockSectionItem helpText="{!$ObjectType.QIPP_Benefit__c.fields.Unit_of_Measure__c.inlineHelpText}" >
                                    <apex:outputLabel value="Unit of Measure" />
                                    <apex:outputText value="{!benifit2.Unit_of_Measure__c}" />
                                </apex:pageBlockSectionItem>
                                
                                
                                <apex:pageBlockSectionItem helpText="{!$ObjectType.QIPP_Benefit__c.fields.ImprovementMeasure_Brief_Description__c.inlineHelpText}">
                                    <apex:outputLabel value="Brief Description" />
                                   <apex:outputfield value="{!benifit2.ImprovementMeasure_Brief_Description__c}">
                                   <apex:inlineEditSupport rendered="false"/>
                                     </apex:outputField>
                                </apex:pageBlockSectionItem>
                               
                                      <!--    </apex:outputPanel></apex:outputPanel>-->
                                 </apex:pageBlockSection>
                                 
                                 
                                 <apex:pageBlockSection columns="1" id="benefitLineItemview" collapsible="false">
                                <apex:variable var="rowNum" value="{!0}" /> 
                                <apex:pageBlockTable value="{!Bn_rep_AddList1}" var="benefitTable">
                                    <apex:column headerValue="Year" style="width:80px">
                                        <apex:outputField value="{!benefitTable.Years__c}">
                                            <apex:inlineEditSupport rendered="false"/>
                                        </apex:outputField>
                                    </apex:column>
                    
                                    <apex:column headerValue="Month" style="width:80px">
                                        <apex:outputField value="{!benefitTable.Months__c}" rendered="true">
                                            <apex:inlineEditSupport rendered="false"/>
                                        </apex:outputField>
                                    </apex:column>
                    
                                    <apex:column headerValue="Planned (k€)" style="width:80px">
                                        <apex:outputText value="{!benefitTable.Benefits_Saving_Amount_Planned__c}" rendered="{!AND(NOT(ISNULL(benefitTable.Benefits_Saving_Amount_Planned__c)),(benefitTable.Benefits_Saving_Amount_Planned__c)!=0)}"/>
                                        <apex:outputText value="-" rendered="{!OR(ISNULL(benefitTable.Benefits_Saving_Amount_Planned__c),(benefitTable.Benefits_Saving_Amount_Planned__c)==0)}"/>
                                    </apex:column>
                                
                                    <apex:column headerValue="Achieved (k€)" style="width:80px">
                                        <apex:outputText value="{!benefitTable.Benefits_Saving_Amount_Achieved__c}" rendered="{!AND(NOT(ISNULL(benefitTable.Benefits_Saving_Amount_Achieved__c)),(benefitTable.Benefits_Saving_Amount_Achieved__c)!=0)}"/>
                                        <apex:outputText value="-" rendered="{!OR(ISNULL(benefitTable.Benefits_Saving_Amount_Achieved__c),(benefitTable.Benefits_Saving_Amount_Achieved__c)==0)}"/>
                                    </apex:column>
                                    
                                    <apex:column headerValue="Future (k€)" style="width:80px">
                                        <apex:outputText value="{!benefitTable.Benefit_Savings_Amount__c}" rendered="{!AND(NOT(ISNULL(benefitTable.Benefit_Savings_Amount__c)),(benefitTable.Benefit_Savings_Amount__c)!=0)}"/>
                                        <apex:outputText value="-" rendered="{!OR(ISNULL(benefitTable.Benefit_Savings_Amount__c),(benefitTable.Benefit_Savings_Amount__c)==0)}"/>
                                    </apex:column>
                              </apex:pageBlockTable> 
                              <apex:pageBlockTable value="{!benefitTotalsList}" headerClass="noHeader" rowClasses="rowColor" var="benifit_Total" rendered="{!AND(NOT(ISNULL(Bn_rep_AddList1)),Bn_rep_AddList1.size>0)}" columnsWidth="20%,20%,20%,20%,20%">
                                <apex:column headerValue=" ">
                                    <apex:outputText rendered="true"/>
                                </apex:column>
                                <apex:column headerValue="Grand Totals ">
                                    <apex:outputText value="Totals" rendered="true" style="float:left"/>
                                </apex:column>
                                <apex:column headerValue="Planned (k€)">
                                    <apex:outputText value="{!benifit2.Total_Benefit_Planned_Amount__c} (k€)" rendered="{!IF(benifit2.Total_Benefit_Planned_Amount__c!=0,true,false)}" style="float:left"/>
                                    <apex:outputText value="-" rendered="{!OR(ISNULL(benifit2.Total_Benefit_Planned_Amount__c),(benifit2.Total_Benefit_Planned_Amount__c)==0)}"/>
                                </apex:column>
                                <apex:column headerValue="Achieved (k€)">
                                    <apex:outputText value="{!benifit2.Total_Benefit_Achieved_Amount__c} (k€)" rendered="{!IF(benifit2.Total_Benefit_Achieved_Amount__c!=0,true,false)}" style="float:left"/>
                                    <apex:outputText value="-" rendered="{!OR(ISNULL(benifit2.Total_Benefit_Achieved_Amount__c),(benifit2.Total_Benefit_Achieved_Amount__c)==0)}"/>
                                </apex:column>
                                <apex:column headerValue="Future (k€)">
                                    <apex:outputText value="{!benifit2.Total_Benefit_Future_Amount__c} (k€)" rendered="{!IF(benifit2.Total_Benefit_Future_Amount__c!=0,true,false)}" style="float:left"/>
                                    <apex:outputText value="-" rendered="{!OR(ISNULL(benifit2.Total_Benefit_Future_Amount__c),(benifit2.Total_Benefit_Future_Amount__c)==0)}"/>
                                </apex:column>
                            </apex:pageBlockTable>
                            </apex:pageBlockSection>
                             <div align="center" draggable="false" >
                           <apex:commandButton id="closeviewpopup"  value="Edit" action="{!closePopupviewBenf}" rendered="{!IF((($Profile.Name !='Nokia QIPP Project Viewer') && recIsLocked==false && (projState != 'Complete')),true,false)}"/>
                           <apex:commandButton value="Close" action="{!closePopupviewonlyBenf}"/>
                         </div>
                                <!-- </apex:pageBlockTable>-->
                          </apex:outputPanel>  
                        </apex:outputPanel>
  <!-- End of View -->                      
           
            <apex:outputPanel id="popupBenf"> 
                    <apex:outputPanel id="popupBackgroundBenf" styleClass="BenfpopupBackground" layout="block" rendered="{!displayPopupBenf}" />
                    <apex:outputPanel id="custPopupBenf" styleClass="BenfcustPopup" layout="block" rendered="{!displayPopupbenf}" >
                    <apex:actionstatus id="actStatusId">
                        <apex:facet name="start">
                            <div class="waitingSearchDiv" id="el_loading" style="background-color: #DCD6D6;height: 100%;opacity:0.65;width:100%;"> 
                            <div class="waitingHolder" style="top: 74.2px; width: 91px;">
                            <img class="waitingImage" src="/img/loading.gif" title="Please Wait..." />
                            <span class="waitingDescription"></span>
                            </div>
                        </div>
                    </apex:facet>
                </apex:actionstatus>
                
                    <apex:pagemessages id="benifitsErrorblock" rendered="{!benifitsErrorMessages}"/>     
                    <apex:pageBlockSection columns="3" title="Improvement Measure" collapsible="false">
                    </apex:pageBlockSection>
                    <apex:pageBlockSection id="pbsmeasure" columns="3">
            <apex:pageBlockSectionItem id="projectMeasureItem" helpText="{!$ObjectType.QIPP_Benefit__c.fields.Improvement_Measure_Name__c.inlineHelpText}" dataStyle="width:10%;float:center">
                <apex:outputLabel value="Improvement Measure"  style="display:inline-block;width:140px"/>
                <apex:actionRegion >
                     <apex:outputPanel styleClass="requiredInput" layout="block">
                    <apex:outputPanel styleClass="requiredBlock" layout="block"/>
                <apex:inputText html-placeholder="Enter 1 or more charecter to search" list="{!listOfStrings}"  value="{!textdata}" style="width:350px;height:22px;margin-top:5px"  onkeypress=" return preventEnterKey(event)">
                  <apex:actionSupport event="onchange"  action="{!getBusinesslinelist}" reRender="pbsmeasure" status="actStatusId"/>
               </apex:inputText> 
               </apex:outputPanel>
               </apex:actionRegion>
               </apex:pageBlockSectionItem>
               
                 <apex:pageBlockSection id="unitmeas">
                   <apex:pageBlockSectionItem helpText="{!$ObjectType.QIPP_Benefit__c.fields.Unit_of_Measure__c.inlineHelpText}" >
                      <apex:outputLabel value="Unit of Measure"  style="display:inline-block;width:90px"/>
                       <apex:outputPanel styleClass="requiredInput" layout="block">
                    <apex:outputPanel styleClass="requiredBlock" layout="block"/>
                      <apex:inputText list="{!listOfUoM}" value="{!UoMeasure}" style="width:120px;height:22px;margin-top:2px"  onkeypress=" return preventEnterKey(event)"/>  
                    </apex:outputPanel>
                  </apex:pageBlockSectionItem>
                   </apex:pageBlockSection>
                 
            
                 <apex:pageBlockSectionItem >
                <apex:outputText ></apex:outputText>
            </apex:pageBlockSectionItem>
              
              
               <apex:pageBlockSectionItem id="descItem" dataStyle="width:10%;float:center" helpText="{!$ObjectType.QIPP_Benefit__c.fields.ImprovementMeasure_Brief_Description__c.inlineHelpText}"><!--helpText="Brief Description">-->
                <apex:outputLabel value="Brief Description" for="desc" style="display:inline-block;width:120px;"/>
              <apex:inputField id="desc" html-placeholder="Enter Description for Improvement Measure - 500 Charecters Limit" value="{!benifit.ImprovementMeasure_Brief_Description__c}" style="width: 350px; height: 60px" />
            </apex:pageBlockSectionItem> 
            
                <apex:pageBlockSectionItem >
                <apex:outputText ></apex:outputText>
            </apex:pageBlockSectionItem>
            
                <apex:pageBlockSectionItem >
                <apex:outputText ></apex:outputText>
            </apex:pageBlockSectionItem>
             <apex:pageBlockSectionItem id="benefitTypeItem" dataStyle="width:10%;float:center" helpText="{!$ObjectType.QIPP_Benefit__c.fields.Benefit_Type__c.inlineHelpText}" >
                <apex:outputLabel value="Benefit Type" style="display:inline-block"/>
                 <apex:outputPanel styleClass="requiredInput" layout="block">
                    <apex:outputPanel styleClass="requiredBlock" layout="block"/>
                 <apex:selectRadio value="{!impBenefitType}" style="width:200%;margin-left:-18px;margin-top:-10px" onkeypress=" return preventEnterKey(event)">
                <apex:selectOption itemValue="Financial Savings" itemlabel="Financial Savings"  /> 
                <apex:selectOption itemValue="Operational Savings" itemlabel="Operational Savings" />
                <apex:selectOption itemValue="Projected Revenue" itemlabel="Projected Revenue" />
                <apex:selectOption itemValue="Realized Revenue" itemlabel="Realized Revenue" />
            </apex:selectRadio>
            </apex:outputpanel>
            </apex:pageBlockSectionItem>    
                    <apex:pageBlockSectionItem >
                            <apex:outputText ></apex:outputText>
                    </apex:pageBlockSectionItem>
                    <apex:pageBlockSectionItem >
                        <apex:outputText ></apex:outputText>
                    </apex:pageBlockSectionItem>
            </apex:pageBlockSection>
            <apex:pageBlockSection columns="5">
            <apex:pageBlockSectionItem >
                <apex:outputText ></apex:outputText>
            </apex:pageBlockSectionItem>
            <apex:pageBlockSectionItem >
            </apex:pageBlockSectionItem>
            <apex:pageBlockSectionItem >
            </apex:pageBlockSectionItem>
            <apex:pageBlockSectionItem >
                <apex:outputText ></apex:outputText>
            </apex:pageBlockSectionItem>
            <apex:pageBlockSectionItem >
                <apex:outputText ></apex:outputText>
            </apex:pageBlockSectionItem>
           </apex:pageBlockSection>
             
             <apex:pageBlockSection columns="1" id="benefitLineItem" collapsible="false">
            <apex:variable var="rowNum" value="{!0}" />
            <apex:pageBlockTable id="addbenefittable" value="{!Bn_rep_AddList}" var="benefitTable">
                        
                         <apex:facet name="footer">
                             <apex:outputPanel >
                            <apex:commandButton value="Add Row" action="{!addRow}" reRender="benefitLineItem" rendered="true" status="actStatusId"/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                            <apex:outputLabel value="Total" style="width: 150px;font-size:12px; font-weight:bold; text-align:right;"></apex:outputLabel>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                            <apex:inputText id="pltotal" html-readonly="true" style="width: 125px;background-color: lightgray;"  onkeypress=" return preventEnterKey(event)"/>&nbsp;&nbsp;
                            <apex:inputText id="achtotal" html-readonly="true" style="width: 125px;background-color: lightgray;"  onkeypress=" return preventEnterKey(event)"/>&nbsp;&nbsp;
                            <apex:inputText id="futtotal" html-readonly="true" style="width: 125px;background-color: lightgray;"  onkeypress=" return preventEnterKey(event)"/>&nbsp;&nbsp;
                            </apex:outputPanel>
                          </apex:facet>
                    
                         <apex:column headerValue="No." style="width:10px; text-align:center;">
                  <apex:outputText value="{0,number, ###}" style="text-align:center;">   
                        <apex:param value="{!rowNum+1}" />   
                    </apex:outputText>
                 </apex:column>
                <apex:column headerValue="Year" style="width:10px;">
                <!--<apex:inputField value="{!benefitTable.Years__c}" rendered="true" style="width: 80px;"/>-->
                <apex:selectList id="year" value="{!benefitTable.Years__c}" size="1" style="width: 80px;">
                    <apex:selectOptions value="{!YearValues}"/>
                </apex:selectList>
                </apex:column>
               <apex:column headerValue="Month" style="width:10px;">
                <apex:inputField value="{!benefitTable.Months__c}" rendered="true" style="width: 60px;"/>
                </apex:column>
                <apex:column headerValue="Planned" style="width:12px;">
                <div class="input-icon">
                <i>k€</i>
                <apex:inputField html-placeholder="Enter Value in k€" style="width: 100px;padding-top:5px;" value="{!benefitTable.Benefits_Saving_Amount_Planned__c}" rendered="true" onkeypress="return isNumberKey(event)" onchange="sumplanned()" styleClass="totalplamount"/>
                </div>
                </apex:column>
                <apex:column headerValue="Achieved" style="width:12px;">
                    <div class="input-icon">
                    <i>k€</i>
                <apex:inputField html-placeholder="Enter Value in k€" style="width: 100px;padding-top:5px;" value="{!benefitTable.Benefits_Saving_Amount_Achieved__c}" rendered="true" onkeypress="return isNumberKey(event)" onchange="sumachieved()" styleClass="totalachamount"/>
                </div>
                </apex:column>
                
                <apex:column headerValue="Future" style="width:12px;" >
                    <div class="input-icon">
                     <i>k€</i>
                <apex:inputField html-placeholder="Enter Value in k€" style="width: 100px;padding-top:5px;" value="{!benefitTable.Benefit_Savings_Amount__c  }" rendered="true" onkeypress="return isNumberKey(event)" onchange="sumfuture()" styleClass="totalfutamount"/>
                </div>
                </apex:column>
                         <apex:column style="width:200px">  
                            <apex:commandLink style="width: 80px;padding-top:5px;font-size:12px; font-weight:bold; text-align:right;text-decoration:none;" styleClass="btn" value="Clone" action="{!cloneRow}" reRender="benefitLineItem,benifitSaveButton" rendered="true" oncomplete="clonesum()" status="actStatusId">
                                <apex:param value="{!rowNum}" name="index" assignTo="{!index}" />
                            </apex:commandLink>
                         </apex:column>
                         
                         <apex:column >
                            <apex:commandLink style="width: 80px;padding-top:5px;font-size:15px; font-weight:bold; text-align:right;color:red;" value="X" action="{!delRow}" reRender="benefitLineItem,benifitSaveButton" rendered="true" onclick="if (! confirm('Confirm your request to Delete the Row')) return false" oncomplete="clonesum()" status="actStatusId">
                                <apex:param value="{!rowNum}" name="index" assignTo="{!index}"/>
                            </apex:commandLink>
                            <apex:variable var="rowNum" value="{!rowNum+1}"/>
                         </apex:column>  
          </apex:pageBlockTable> 
        </apex:pageBlockSection>
             <div align="center" draggable="false" >
               <apex:commandButton id="benifitSaveButton" value="Save & Close" onclick=" validationamount();" oncomplete="SaveBenefits();" />
                <apex:actionFunction name="doSubmit" action="{!saveBenefit}" />
                <apex:commandButton value="Cancel" action="{!closePopupBenf}"/>
             </div>     
             <div id="importantNotes_edit" align="left" draggable="false" style="margin-left:10px;margin-right:1;margin-top:10px;">
                   <span><b>Note:</b></span><br/>
                   <apex:outputLabel > 1) The sum of achieved and future savings/revenue are counted as project benefits or continuous improvement impact (CII).</apex:outputLabel><br/>
                   <apex:outputLabel >Planned savings/revenue are not considered as part of project benefits or CII.</apex:outputLabel><br/>
                   <apex:outputLabel > 2) Always record the net benefits - after deducting project cost and/or other depreciation.</apex:outputLabel><br/>
                   <apex:outputLabel > 3) CI projects benefits are usually extrapolated for up to 12 months after the process changes have been implemented. This period may be greater than 12 months when</apex:outputLabel><br/>
                   <apex:outputLabel > the project requires significant investment that cannot be recouped with net impact within 12 months.</apex:outputLabel><br/>
             </div>
               </apex:outputPanel>  
                        </apex:outputPanel> 
                    
                    <!-- Start of Edit view -->
                    
<apex:outputPanel id="popupEditBenf"> 
        <apex:outputPanel id="popupEditBackgroundBenf" styleClass="BenfpopupBackground" layout="block" rendered="{!displayPopupeditBenf}" />
        <apex:outputPanel id="custEditPopupBenf" styleClass="BenfcustPopup" layout="block" rendered="{!displayPopupeditBenf}" >
        <apex:actionstatus id="actStatusId1">
                        <apex:facet name="start">
                            <div class="waitingSearchDiv" id="el_loading" style="background-color: #DCD6D6;height: 100%;opacity:0.65;width:100%;"> 
                            <div class="waitingHolder" style="top: 74.2px; width: 91px;">
                            <img class="waitingImage" src="/img/loading.gif" title="Please Wait..." />
                            <span class="waitingDescription"></span>
                            </div>
                        </div>
                    </apex:facet>
                </apex:actionstatus>
        <apex:pagemessages id="editBenifitsErrorblock" rendered="{!editBenifitsErrorMessages}"/>
            <apex:pageBlock id="pbeditbenf">
              <apex:pageBlockSection id="pbsmeasureEdit" columns="3"  title="Improvement Measure Edit" collapsible="false">
                    
                       <apex:pageBlockSectionItem id="projectMeasureItem" dataStyle="width:10%;float:center" helpText="{!$ObjectType.QIPP_Benefit__c.fields.Improvement_Measure_Name__c.inlineHelpText}">
                            <apex:outputLabel value="Improvement Measure" style="display:inline-block;width:140px"/>
                                <apex:actionRegion >
                                     <apex:outputPanel styleClass="requiredInput" layout="block">
                                    <apex:outputPanel styleClass="requiredBlock" layout="block"/>       
                                <apex:inputText list="{!listOfStrings}" value="{!benifit.Improvement_Measure_Name__c}" style="width:350px;height:18px;margin-top:2px" onkeypress=" return preventEnterKey(event)">
                                    <apex:actionSupport event="onchange" action="{!getBusinesslinelist1}" reRender="unitmeasEdit,briefdescEdit,benfittypeid" status="actStatusId1"/>
                                </apex:inputText> 
                               </apex:outputPanel>
                                </apex:actionRegion>
                           </apex:pageBlockSectionItem>
                    
                            <apex:pageBlockSection id="unitmeasEdit">
                               <apex:pageBlockSectionItem helpText="{!$ObjectType.QIPP_Benefit__c.fields.Unit_of_Measure__c.inlineHelpText}">
                                  <apex:outputLabel value="Unit Of measure" style="display:inline-block;width:90px"/>
                                     <apex:outputPanel styleClass="requiredInput" layout="block">
                                     <apex:outputPanel styleClass="requiredBlock" layout="block"/>
                                    <apex:inputText list="{!listOfUoM}" value="{!benifit.Unit_of_Measure__c}" style="width:120px;height:18px;margin-top:-2px;" onkeypress=" return preventEnterKey(event)"/>
                                    </apex:outputPanel>
                                    </apex:pageBlockSectionItem>
                            </apex:pageBlockSection>
                                  <apex:pageBlockSectionItem >
                                    <apex:outputText ></apex:outputText>
                                </apex:pageBlockSectionItem>
                                
                                 <apex:pageBlockSection id="briefdescEdit">
                    <apex:pageBlockSectionItem helpText="{!$ObjectType.QIPP_Benefit__c.fields.ImprovementMeasure_Brief_Description__c.inlineHelpText}" dataStyle="width:10%;float:center">
                        <apex:outputLabel value="Brief Description" style="display:inline-block;width:140px;" />
                        <apex:inputTextarea html-placeholder="Enter Description for Improvement Measure - 500 Charecters Limit" value="{!benifit.ImprovementMeasure_Brief_Description__c}" style="width:350px;height:45px"/>
                    </apex:pageBlockSectionItem>
                </apex:pageBlockSection>
                <apex:pageBlockSectionItem >
                    <apex:outputText ></apex:outputText>
                </apex:pageBlockSectionItem>
                
                <apex:pageBlockSectionItem >
                    <apex:outputText ></apex:outputText>
                </apex:pageBlockSectionItem>
                
                 <apex:pageBlockSectionItem id="benefitTypeItem" dataStyle="width:50%;float:center" labelStyle="width:1%;float:center;margin-top:-10px;" helpText="{!$ObjectType.QIPP_Benefit__c.fields.Benefit_Type__c.inlineHelpText}">
                <apex:outputLabel value="Benefit Type" style="display:inline-block;width:125px;margin-top:-10px"/>
                 <apex:outputPanel id="benfittypeid" styleClass="requiredInput" layout="block">
                    <apex:outputPanel styleClass="requiredBlock" layout="block"/>
                <apex:selectRadio value="{!benifit.Benefit_Type__c}" style="width:140%;float:left;margin-left:-18px;margin-top: -10px;" onkeypress=" return preventEnterKey(event)">
                    <apex:selectOption itemValue="Financial Savings" itemlabel="Financial Savings" />
                    <apex:selectOption itemValue="Operational Savings" itemlabel="Operational Savings" />
                    <apex:selectOption itemValue="Projected Revenue" itemlabel="Projected Revenue" />
                    <apex:selectOption itemValue="Realized Revenue" itemlabel="Realized Revenue" />
                </apex:selectRadio>
                </apex:outputPanel>
            </apex:pageBlockSectionItem>
                    
            </apex:pageBlockSection>
        
        
             
             <apex:pageBlockSection columns="1" id="benefitLineItemEdit" collapsible="false">
            <apex:variable var="rowNum" value="{!0}" /> 
            <apex:pageBlockTable id="pbtableeditbenf" value="{!Bn_rep_AddList}" var="benefitTable">
                         <apex:facet name="footer">
                         <apex:outputPanel >
                            <apex:commandButton value="Add Row" action="{!addRow}" reRender="benefitLineItemEdit" rendered="true" status="actStatusId1"/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                            <apex:outputLabel value="Total" style="width: 100px;font-size:12px; font-weight:bold; text-align:right;"></apex:outputLabel> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                            <apex:inputText id="pltotal" html-placeholder="k€" html-readonly="true" style="width: 125px;background-color: lightgray;" onkeypress=" return preventEnterKey(event)"/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                            <apex:inputText id="achtotal" html-placeholder="k€" html-readonly="true" style="width: 125px;background-color: lightgray;" onkeypress=" return preventEnterKey(event)"/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                            <apex:inputText id="futtotal" html-placeholder="k€" html-readonly="true" style="width: 125px;background-color: lightgray;" onkeypress=" return preventEnterKey(event)"/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                           </apex:outputPanel>
                           </apex:facet>
                       
                         <apex:column headerValue="No." style="width:10px; text-align:center;">
                          <apex:outputText value="{0,number, ###}" style="text-align:center;">   
                                <apex:param value="{!rowNum+1}" />   
                            </apex:outputText>
                         </apex:column>
                     
                        <apex:column headerValue="Year" style="width:10px">
                        <!--<apex:inputField value="{!benefitTable.Years__c}" rendered="true" style="width: 80px;"/>-->
                        <apex:selectList id="year" value="{!benefitTable.Years__c}" size="1" style="width: 80px;">
                            <apex:selectOptions value="{!YearValues}"/>
                        </apex:selectList>
                        </apex:column>
        
                       <apex:column headerValue="Month" style="width:10px">
                        <apex:inputField value="{!benefitTable.Months__c}" rendered="true" style="width: 60px;"/>
                        </apex:column>
        
                        <apex:column headerValue="Planned" style="width:12px;">
                            <div class="input-icon">
                                <i>k€</i>
                                    <apex:inputField html-placeholder="Enter Value in k€" value="{!benefitTable.Benefits_Saving_Amount_Planned__c}" rendered="true" style="width: 100px;padding-top:5px;" onkeypress="return isNumberKey(event)" onchange="editsumplanned()" styleClass="edittotalplamount"/>
                            </div>
                        </apex:column>
                        
                        <apex:column headerValue="Achieved" style="width:12px">
                            <div class="input-icon">
                                <i>k€</i>
                                    <apex:inputField html-placeholder="Enter Value in k€" value="{!benefitTable.Benefits_Saving_Amount_Achieved__c}" rendered="true" style="width: 100px;padding-top:5px;" onkeypress="return isNumberKey(event)"  onchange="editsumachieved()" styleClass="edittotalachamount"/>
                            </div>
                        </apex:column>
                        
                        <apex:column headerValue="Future" style="width:12px">
                            <div class="input-icon">
                                <i>k€</i>
                                    <apex:inputField html-placeholder="Enter Value in k€" value="{!benefitTable.Benefit_Savings_Amount__c  }" rendered="true" style="width: 100px;padding-top:5px;"  onkeypress="return isNumberKey(event)" onchange="editsumfuture()" styleClass="edittotalfutamount"/>
                            </div>
                        </apex:column>
                         <apex:column style="width:200px">  
                            <apex:commandLink style="width: 80px;padding-top:5px;font-size:12px; font-weight:bold; text-align:right;text-decoration:none;" styleClass="btn" value="Clone" action="{!cloneRow}" onkeypress="return isNumberKey(event)" reRender="benefitLineItemEdit" rendered="true" oncomplete="editclonesum()" status="actStatusId1">
                                <apex:param value="{!rowNum}" name="index" />
                            </apex:commandLink>
                         </apex:column>
                         <apex:column style="width:20px" >
                            <apex:commandLink style="width: 80px;padding-top:5px;font-size:15px; font-weight:bold; text-align:right;color:red;"  value="X" action="{!delRow}" reRender="benefitLineItemEdit" rendered="true" oncomplete="editclonesum()" status="actStatusId1">
                                <apex:param value="{!rowNum}" name="index" />
                            </apex:commandLink>
                            <apex:variable var="rowNum" value="{!rowNum+1}"/>
                         </apex:column> 
                
          </apex:pageBlockTable> 
        </apex:pageBlockSection>
        <apex:pageBlockButtons id="pbeditbuttons" location="bottom">
                    <!-- <apex:commandButton id="benifitEditSaveButton" value="Save & Close" action="{!saveBenefit}" style="margin-left:100px" onclick=" return editvalidationamount()"/>-->
                    <apex:commandButton id="benifitEditSaveButton" value="Save & Close" style="margin-left:100px" onclick=" editvalidationamount();"  oncomplete="editSaveBenefits();"/>
                    <apex:actionFunction name="doeditSubmit" action="{!saveBenefit}" />
                    <apex:commandButton value="Cancel" action="{!closeEditPopupBenf}"/>
        </apex:pageBlockButtons>
        </apex:pageBlock>
        <div id="importantNotes_edit" align="left" draggable="false" style="margin-left:10px;margin-right:1;margin-top:10px;">
                   <span><b>Note:</b></span><br/>
                   <apex:outputLabel > 1) The sum of achieved and future savings/revenue are counted as project benefits or continuous improvement impact (CII).</apex:outputLabel><br/>
                   <apex:outputLabel >Planned savings/revenue are not considered as part of project benefits or CII.</apex:outputLabel><br/>
                   <apex:outputLabel > 2) Always record the net benefits - after deducting project cost and/or other depreciation.</apex:outputLabel><br/>
                   <apex:outputLabel > 3) CI projects benefits are usually extrapolated for up to 12 months after the process changes have been implemented. This period may be greater than 12 months when</apex:outputLabel><br/>
                   <apex:outputLabel > the project requires significant investment that cannot be recouped with net impact within 12 months.</apex:outputLabel><br/>
        </div>
    </apex:outputPanel>  
</apex:outputPanel>                     
                    <!-- End of Edit view -->
                    <!-- End Benefit Creation -->


            <!-- BBG % Distribution ** Start ** -->
                    <apex:pageBlockSection id="benefitingBusinessGrp" title="Benefit Distribution" collapsible="false" rendered="{!IF(((Benefits_RelatedList!=null && Benefits_RelatedList.size>0) && benefitAmount >0),true,false)}"/>
            <!--<apex:outputPanel rendered="true"><apex:outputText value="No Distribution found" style="font-family:arial;font-size:100%"></apex:outputText></apex:outputPanel>-->
            <apex:pageBlockSection columns="1" id="bgGroupSection" collapsible="false" rendered="{!IF(((Benefits_RelatedList!=null && Benefits_RelatedList.size>0)&& benefitAmount >0),true,false)}">
                <apex:variable var="bggRowNum" value="{!0}" />
                <!--BBG % Distribution Table on Project view -->
                <apex:outputText rendered="{!IF((projectbbglist!=null && projectbbglist.size>0),true,false)}"><b>Note: The validated achieved and future benefits (€) recorded in the project will be distributed to the following organization(s)</b></apex:outputText>
                   <apex:pageBlockTable value="{!projectbbglist}" var="bgTable" id="pbTableBG2">
                    <apex:column headerValue="No." style="width:20px; text-align:center;" headerClass="centertext">
                        <apex:outputText value="{0,number, ###}" style="text-align:center;">   
                            <apex:param value="{!bggRowNum+1}" />   
                        </apex:outputText>
                    </apex:column>
                    <apex:column headerValue="Business Group" style="width:120px">
                        <apex:outputField value="{!bgTable.Benefitting_Business_Grp_Functional_Grp__c}" rendered="true">
                            <apex:inlineEditSupport rendered="false"/>
                        </apex:outputField>
                    </apex:column>
                    <apex:column headerValue="Business Unit" style="width:120px">
                        <apex:outputField value="{!bgTable.Benefitting_Business_Unit__c}" rendered="true">
                            <apex:inlineEditSupport rendered="false"/>
                        </apex:outputField>
                    </apex:column>
                    <apex:column headerValue="Business Line" style="width:120px">
                        <apex:outputField value="{!bgTable.Benefitting_Business_Line__c}" rendered="true">
                            <apex:inlineEditSupport rendered="false"/>
                        </apex:outputField>
                    </apex:column>
                    <apex:column headerValue="Financial val Amount(k€)" style="width:120px">
                        <apex:outputText value="{!bgTable.Financial_Validation_Amount__c}(k€)" rendered="{!AND(NOT(ISNULL(bgTable.Financial_Validation_Amount__c)),(bgTable.Financial_Validation_Amount__c)>0)}"/>
                        <apex:outputText value="-" rendered="{!OR(ISNULL(bgTable.Financial_Validation_Amount__c),(bgTable.Financial_Validation_Amount__c)==0.0)}"/>   
                    </apex:column>
                    <apex:column headerValue="Operational Val Amount(k€)" style="width:120px">
                            <apex:outputText value="{!bgTable.Operational_Validation_Amount__c}(k€)" rendered="{!AND(NOT(ISNULL(bgTable.Operational_Validation_Amount__c)),(bgTable.Operational_Validation_Amount__c)>0)}"/>
                            <apex:outputText value="-" rendered="{!OR(ISNULL(bgTable.Operational_Validation_Amount__c),(bgTable.Operational_Validation_Amount__c)==0.0)}"/>
                     </apex:column>
                    <apex:column headerValue="Projected Val Amount(k€)" style="width:120px">
                        <apex:outputText value="{!bgTable.Projected_Validation_Amount__c}(k€)" rendered="{!AND(NOT(ISNULL(bgTable.Projected_Validation_Amount__c)),(bgTable.Projected_Validation_Amount__c)>0)}"/>
                        <apex:outputText value="-" rendered="{!OR(ISNULL(bgTable.Projected_Validation_Amount__c),(bgTable.Projected_Validation_Amount__c)==0.0)}"/>       
                    </apex:column>
                    <apex:column headerValue="Realized Val Amount(k€)" style="width:120px">
                        <apex:outputText value="{!bgTable.Realized_Validation_Amount__c}(k€)" rendered="{!AND(NOT(ISNULL(bgTable.Realized_Validation_Amount__c)),(bgTable.Realized_Validation_Amount__c)>0)}"/>
                        <apex:outputText value="-" rendered="{!OR(ISNULL(bgTable.Realized_Validation_Amount__c),(bgTable.Realized_Validation_Amount__c)==0.0)}"/>         
                     </apex:column>
                    <apex:column headerValue=" Total (k€)" style="width:120px">
                        <apex:outputText value="{!bgTable.Total_Validation_Amount__c}(k€)" rendered="{!AND(NOT(ISNULL(bgTable.Total_Validation_Amount__c)),(bgTable.Total_Validation_Amount__c)>0)}"/>
                        <apex:outputText value="-" rendered="{!OR(ISNULL(bgTable.Total_Validation_Amount__c),(bgTable.Total_Validation_Amount__c)==0.0)}"/>             
                     </apex:column>
                    <apex:column headerValue=" Amount in %" style="width:120px">
                        <apex:outputText value="{!bgTable.Total_Validation_Amount_percent__c}%" rendered="{!AND(NOT(ISNULL(bgTable.Total_Validation_Amount_percent__c)),(bgTable.Total_Validation_Amount_percent__c)>0)}"/>
                        <apex:outputText value="-" rendered="{!OR(ISNULL(bgTable.Total_Validation_Amount_percent__c),(bgTable.Total_Validation_Amount_percent__c)==0.0)}"/>             
                        <apex:variable var="bggRowNum" value="{!bggRowNum+1}"/>
                    </apex:column>
                        
                </apex:pageBlockTable>                                                
                <apex:commandButton id="Adddistribution" value="Add/Modify Benefit Distribution" action="{!mulBBGDistribution}" rendered="{!IF((($Profile.Name !='Nokia QIPP Project Viewer') && recIsLocked==false && projState != 'Complete' ),true,false)}"/>
                <!-- *********************************** -->
                <!-- Popup Window For To Add BBG % Distribution -->
                <apex:outputPanel id="popupBBG"> 
                    <apex:outputPanel id="popupBackground" styleClass="BBGpopupBackground" layout="block" rendered="{!displayPopupBBGDist}" />
                    <apex:outputPanel id="custPopup" styleClass="BBGcustPopup" layout="block" rendered="{!displayPopupBBGDist}" >
                        <apex:actionstatus id="actStatusId2">
                        <apex:facet name="start">
                            <div class="waitingSearchDiv" id="el_loading" style="background-color: #DCD6D6;height: 1000px;opacity:0.65;width:1600px;"> 
                            <div class="waitingHolder" style="top: 74.2px; width: 91px;">
                            <img class="waitingImage" src="/img/loading.gif" title="Please Wait..." />
                            <span class="waitingDescription"></span>
                            </div>
                        </div>
                    </apex:facet>
                </apex:actionstatus>
                        <apex:pagemessages id="bbgErrorblock" rendered="{!bbgErrorMessages}"/>
                        <apex:pageBlockSection id="mulBenefitingBusinessGrp" title="Benefit Distribution" collapsible="false"/>
                        <br></br>
                        <apex:outputText rendered="true"><b>Note: The validated achieved and future benefits (€) recorded in the project will be distributed to the following organization(s)</b></apex:outputText>
                        <br></br><br></br>
                        <apex:variable var="mulBGDistRowNum" value="{!0}" />
                        <apex:pageBlockTable value="{!projMultipleBBGDistAddList}" var="mulBGTable" id="pbTableMultipleBG" >
                            <apex:facet name="footer">
                                <apex:commandButton value="Add Row" action="{!addBGRowDist}" reRender="popupBBG,pbTableMultipleBG,bgGroupSection" rendered="true" status="actStatusId2" oncomplete="bbgreadonly();"/>
                            </apex:facet>
                            <apex:column headerValue="No." style="width:20px; text-align:center;" headerClass="centertext">
                                <apex:outputText value="{0,number, ###}" style="text-align:center;">   
                                    <apex:param value="{!mulBGDistRowNum+1}" />   
                                </apex:outputText>
                            </apex:column>
                            <apex:column headerValue="Business Group" style="width:120px">
                                <apex:inputField value="{!mulBGTable.Benefitting_Business_Grp_Functional_Grp__c}" rendered="{!mulBGTable.Project_BG__c == false}"/>
                                <apex:outputText value="{!mulBGTable.Benefitting_Business_Grp_Functional_Grp__c}" rendered="{!mulBGTable.Project_BG__c == true}" />
                            </apex:column>
                            <apex:column headerValue="Business Unit" style="width:120px">
                                <apex:inputField value="{!mulBGTable.Benefitting_Business_Unit__c}" rendered="{!mulBGTable.Project_BG__c == false}" />
                                <apex:outputText value="{!mulBGTable.Benefitting_Business_Unit__c}" rendered="{!mulBGTable.Project_BG__c == true}" />
                            </apex:column>
                            <apex:column headerValue="Business Line" style="width:120px">
                                <apex:inputField value="{!mulBGTable.Benefitting_Business_Line__c}" rendered="{!mulBGTable.Project_BG__c == false}" />
                                <apex:outputText value="{!mulBGTable.Benefitting_Business_Line__c}" rendered="{!mulBGTable.Project_BG__c == true}" />
                            </apex:column>
                            <apex:column headerValue="Financial Val Amount(k€)" style="width:40px">
                                <apex:inputField value="{!mulBGTable.Financial_Validation_Amount__c}" rendered="{!mulBGTable.Project_BG__c == false}" onchange="BBGFIValidationAmount()"  onkeypress="return isNumberKeyBBGfi(event)" styleClass="BBGFItotal"/>
                                <apex:inputField id="mainBGfival" value="{!mulBGTable.Financial_Validation_Amount__c}" rendered="{!mulBGTable.Project_BG__c == true}" style="border:none;" />
                            </apex:column>
                            <apex:column headerValue="Operational Val Amount(k€)" style="width:40px"> 
                                <apex:inputField value="{!mulBGTable.Operational_Validation_Amount__c}" rendered="{!mulBGTable.Project_BG__c == false}"  onchange="BBGOPValidationAmount()"  onkeypress="return isNumberKeyBBGop(event)" styleClass="BBGOPtotal" />
                                <apex:inputField id="mainBGopval" value="{!mulBGTable.Operational_Validation_Amount__c}" rendered="{!mulBGTable.Project_BG__c == true}" style="border:none;" />
                            </apex:column>
                            
                            <apex:column headerValue="Projected Val Amount(k€)" style="width:40px">
                                <apex:inputField value="{!mulBGTable.Projected_Validation_Amount__c}" rendered="{!mulBGTable.Project_BG__c == false}" onchange="BBGPOValidationAmount()"  onkeypress="return isNumberKeyBBGproj(event)" styleClass="BBGPOtotal" />
                                <apex:inputField id="mainBGprojval" value="{!mulBGTable.Projected_Validation_Amount__c}" rendered="{!mulBGTable.Project_BG__c == true}" style="border:none;" />
                            </apex:column>
                            <apex:column headerValue="Realized Val Amount(k€)" style="width:40px">
                                <apex:inputField value="{!mulBGTable.Realized_Validation_Amount__c}" rendered="{!mulBGTable.Project_BG__c == false}" onchange="BBGREValidationAmount()"  onkeypress="return isNumberKeyBBGrel(event)" styleClass="BBGREtotal"/>
                                <apex:inputField id="mainBGrealval" value="{!mulBGTable.Realized_Validation_Amount__c}" rendered="{!mulBGTable.Project_BG__c == true}" style="border:none;" />
                            </apex:column>
                          
                            <!--<apex:column headerValue="% Distribution" style="width:120px">
                                <div class="input-icon">
                                    <apex:inputField id="mainBG1" html-placeholder="Enter % Distribution"  value="{!mulBGTable.Distribution__c}" rendered="{!mulBGTable.Project_BG__c == false}" onchange="sumBBG()" styleClass="BBGtotal" />
                                    <i>%</i>
                                    <apex:inputField id="mainBGdefault"  rendered="{!mulBGTable.Project_BG__c == true}"  value=" {!mulBGTable.Distribution__c}" style="border:none"> &nbsp; &nbsp; &nbsp; &nbsp; </apex:inputField>   
                                </div>
                            </apex:column>-->
                            <apex:column headerValue="Delete" style="width:90px" >
                                <apex:commandLink style="font-size:15px; font-weight:bold; text-align:center;color:red;" value="X" action="{!delBGRowDist}" rendered="{!mulBGTable.Project_BG__c == false}" rerender="popupBBG,pbTableMultipleBG,bgGroupSection" onclick="if (! confirm('Do You want to delete the Business Group from the Project, Once the Business Group is deleted, % distribituion will be added to the Default Business Group')) return false"   oncomplete="BBGOPValidationAmount();BBGFIValidationAmount();BBGPOValidationAmount();BBGREValidationAmount();" status="actStatusId2" >
                                    <apex:param value="{!mulBGDistRowNum}" name="index"/>
                                </apex:commandLink>
                                <apex:variable var="mulBGDistRowNum" value="{!mulBGDistRowNum+1}"/>
                            </apex:column> 
                        </apex:pageBlockTable>
                        <div align="center" draggable="false" >
                           <!-- <apex:commandButton id="saveBBG" value="Save & Close" action="{!saveMulBBG}" onclick="if (!confirm('If Benefits Added/Modified in the Benefit Section after Benefitting Distribution,then all the added Benefitting Businesss Groups will be deleted other than Default Benefitting Group.Please Make sure Benefits are freezed and add Benefit Distribution to the project.')) return false"/>-->
                           <apex:commandButton id="saveBBG" value="Save & Close" style="margin-left:100px" onclick=" saveBBG();" oncomplete="saveBBGval();"/>
                            <apex:actionFunction name="doSave" action="{!saveMulBBG}" />
                         <apex:commandButton value="Close" action="{!closePopupBBGDist}" />
                        </div>
                       
                      <div id="BBGInstruction" align="left" draggable="false" style="margin-top:10px;margin-left:8px;">
                        <span><b>Instructions:</b></span><br/>
                         <apex:outputLabel > 1) The first row is the Default Row displays the Business Group, Business Unit, and Business Line that were entered when the project was created.  By default, 100% of the Benefit Savings is assigned to this row.</apex:outputLabel><br/>
                         <apex:outputLabel >2) Click on Add Row to add a New BG/BU/BL and enter the expected Benefit Savings in the appropriate fields. The Benefit Savings amounts.</apex:outputLabel><br/>
                         <apex:outputLabel >3) Click on the Delete symbol “X” to delete a BG/BU/BL row. The amounts in the deleted row will be added automatically to the Default Row.</apex:outputLabel><br/>
                         <apex:outputLabel >4) “0.1” is the Minimum value accepted for any Amount.</apex:outputLabel><br/>
                        <apex:outputLabel > 5) 20 is the Maximum number of BG/BU/BL rows allowed.</apex:outputLabel><br/>
                        </div>
                    </apex:outputPanel>  
                </apex:outputPanel>
            </apex:pageBlockSection>

                 
            <!-- BBG % Distribution ** End ** -->
        
            <!-- BBG % Distribution ** End ** -->
            
               <!-- End of Benefit creation section --> 

           
            
        </apex:pageBlock>             
    </apex:form>
</apex:page>